'''Autogenerated by xml_generate script, do not edit!'''
from OpenGL import platform as _p, arrays
# Code generation uses this
from OpenGL.raw.EGL import _types as _cs
# End users want this...
from OpenGL.raw.EGL._types import *
from OpenGL.raw.EGL import _errors
from OpenGL.constant import Constant as _C

import ctypes
_EXTENSION_NAME = 'EGL_KHR_lock_surface3'
def _f( function ):
    return _p.createFunction( function,_p.PLATFORM.EGL,'EGL_KHR_lock_surface3',error_checker=_errors._error_checker)
EGL_BITMAP_ORIGIN_KHR=_C('EGL_BITMAP_ORIGIN_KHR',0x30C8)
EGL_BITMAP_PITCH_KHR=_C('EGL_BITMAP_PITCH_KHR',0x30C7)
EGL_BITMAP_PIXEL_ALPHA_OFFSET_KHR=_C('EGL_BITMAP_PIXEL_ALPHA_OFFSET_KHR',0x30CC)
EGL_BITMAP_PIXEL_BLUE_OFFSET_KHR=_C('EGL_BITMAP_PIXEL_BLUE_OFFSET_KHR',0x30CB)
EGL_BITMAP_PIXEL_GREEN_OFFSET_KHR=_C('EGL_BITMAP_PIXEL_GREEN_OFFSET_KHR',0x30CA)
EGL_BITMAP_PIXEL_LUMINANCE_OFFSET_KHR=_C('EGL_BITMAP_PIXEL_LUMINANCE_OFFSET_KHR',0x30CD)
EGL_BITMAP_PIXEL_RED_OFFSET_KHR=_C('EGL_BITMAP_PIXEL_RED_OFFSET_KHR',0x30C9)
EGL_BITMAP_PIXEL_SIZE_KHR=_C('EGL_BITMAP_PIXEL_SIZE_KHR',0x3110)
EGL_BITMAP_POINTER_KHR=_C('EGL_BITMAP_POINTER_KHR',0x30C6)
EGL_FORMAT_RGBA_8888_EXACT_KHR=_C('EGL_FORMAT_RGBA_8888_EXACT_KHR',0x30C2)
EGL_FORMAT_RGBA_8888_KHR=_C('EGL_FORMAT_RGBA_8888_KHR',0x30C3)
EGL_FORMAT_RGB_565_EXACT_KHR=_C('EGL_FORMAT_RGB_565_EXACT_KHR',0x30C0)
EGL_FORMAT_RGB_565_KHR=_C('EGL_FORMAT_RGB_565_KHR',0x30C1)
EGL_LOCK_SURFACE_BIT_KHR=_C('EGL_LOCK_SURFACE_BIT_KHR',0x0080)
EGL_LOCK_USAGE_HINT_KHR=_C('EGL_LOCK_USAGE_HINT_KHR',0x30C5)
EGL_LOWER_LEFT_KHR=_C('EGL_LOWER_LEFT_KHR',0x30CE)
EGL_MAP_PRESERVE_PIXELS_KHR=_C('EGL_MAP_PRESERVE_PIXELS_KHR',0x30C4)
EGL_MATCH_FORMAT_KHR=_C('EGL_MATCH_FORMAT_KHR',0x3043)
EGL_OPTIMAL_FORMAT_BIT_KHR=_C('EGL_OPTIMAL_FORMAT_BIT_KHR',0x0100)
EGL_READ_SURFACE_BIT_KHR=_C('EGL_READ_SURFACE_BIT_KHR',0x0001)
EGL_UPPER_LEFT_KHR=_C('EGL_UPPER_LEFT_KHR',0x30CF)
EGL_WRITE_SURFACE_BIT_KHR=_C('EGL_WRITE_SURFACE_BIT_KHR',0x0002)
@_f
@_p.types(_cs.EGLBoolean,_cs.EGLDisplay,_cs.EGLSurface,arrays.GLintArray)
def eglLockSurfaceKHR(dpy,surface,attrib_list):pass
@_f
@_p.types(_cs.EGLBoolean,_cs.EGLDisplay,_cs.EGLSurface,_cs.EGLint,ctypes.POINTER(_cs.EGLAttribKHR))
def eglQuerySurface64KHR(dpy,surface,attribute,value):pass
@_f
@_p.types(_cs.EGLBoolean,_cs.EGLDisplay,_cs.EGLSurface)
def eglUnlockSurfaceKHR(dpy,surface):pass
