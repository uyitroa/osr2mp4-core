'''Autogenerated by xml_generate script, do not edit!'''
from OpenGL import platform as _p, arrays
# Code generation uses this
from OpenGL.raw.EGL import _types as _cs
# End users want this...
from OpenGL.raw.EGL._types import *
from OpenGL.raw.EGL import _errors
from OpenGL.constant import Constant as _C

import ctypes
_EXTENSION_NAME = 'EGL_VERSION_EGL_1_5'
def _f( function ):
    return _p.createFunction( function,_p.PLATFORM.EGL,'EGL_VERSION_EGL_1_5',error_checker=_errors._error_checker)
EGL_CL_EVENT_HANDLE=_C('EGL_CL_EVENT_HANDLE',0x309C)
EGL_CONDITION_SATISFIED=_C('EGL_CONDITION_SATISFIED',0x30F6)
EGL_CONTEXT_MAJOR_VERSION=_C('EGL_CONTEXT_MAJOR_VERSION',0x3098)
EGL_CONTEXT_MINOR_VERSION=_C('EGL_CONTEXT_MINOR_VERSION',0x30FB)
EGL_CONTEXT_OPENGL_COMPATIBILITY_PROFILE_BIT=_C('EGL_CONTEXT_OPENGL_COMPATIBILITY_PROFILE_BIT',0x00000002)
EGL_CONTEXT_OPENGL_CORE_PROFILE_BIT=_C('EGL_CONTEXT_OPENGL_CORE_PROFILE_BIT',0x00000001)
EGL_CONTEXT_OPENGL_DEBUG=_C('EGL_CONTEXT_OPENGL_DEBUG',0x31B0)
EGL_CONTEXT_OPENGL_FORWARD_COMPATIBLE=_C('EGL_CONTEXT_OPENGL_FORWARD_COMPATIBLE',0x31B1)
EGL_CONTEXT_OPENGL_PROFILE_MASK=_C('EGL_CONTEXT_OPENGL_PROFILE_MASK',0x30FD)
EGL_CONTEXT_OPENGL_RESET_NOTIFICATION_STRATEGY=_C('EGL_CONTEXT_OPENGL_RESET_NOTIFICATION_STRATEGY',0x31BD)
EGL_CONTEXT_OPENGL_RESET_NOTIFICATION_STRATEGY=_C('EGL_CONTEXT_OPENGL_RESET_NOTIFICATION_STRATEGY',0x31BD)
EGL_CONTEXT_OPENGL_ROBUST_ACCESS=_C('EGL_CONTEXT_OPENGL_ROBUST_ACCESS',0x31B2)
EGL_CONTEXT_OPENGL_ROBUST_ACCESS=_C('EGL_CONTEXT_OPENGL_ROBUST_ACCESS',0x31B2)
EGL_FOREVER=_C('EGL_FOREVER',0xFFFFFFFFFFFFFFFF)
EGL_GL_COLORSPACE=_C('EGL_GL_COLORSPACE',0x309D)
EGL_GL_COLORSPACE_LINEAR=_C('EGL_GL_COLORSPACE_LINEAR',0x308A)
EGL_GL_COLORSPACE_SRGB=_C('EGL_GL_COLORSPACE_SRGB',0x3089)
EGL_GL_RENDERBUFFER=_C('EGL_GL_RENDERBUFFER',0x30B9)
EGL_GL_TEXTURE_2D=_C('EGL_GL_TEXTURE_2D',0x30B1)
EGL_GL_TEXTURE_3D=_C('EGL_GL_TEXTURE_3D',0x30B2)
EGL_GL_TEXTURE_CUBE_MAP_NEGATIVE_X=_C('EGL_GL_TEXTURE_CUBE_MAP_NEGATIVE_X',0x30B4)
EGL_GL_TEXTURE_CUBE_MAP_NEGATIVE_Y=_C('EGL_GL_TEXTURE_CUBE_MAP_NEGATIVE_Y',0x30B6)
EGL_GL_TEXTURE_CUBE_MAP_NEGATIVE_Z=_C('EGL_GL_TEXTURE_CUBE_MAP_NEGATIVE_Z',0x30B8)
EGL_GL_TEXTURE_CUBE_MAP_POSITIVE_X=_C('EGL_GL_TEXTURE_CUBE_MAP_POSITIVE_X',0x30B3)
EGL_GL_TEXTURE_CUBE_MAP_POSITIVE_Y=_C('EGL_GL_TEXTURE_CUBE_MAP_POSITIVE_Y',0x30B5)
EGL_GL_TEXTURE_CUBE_MAP_POSITIVE_Z=_C('EGL_GL_TEXTURE_CUBE_MAP_POSITIVE_Z',0x30B7)
EGL_GL_TEXTURE_LEVEL=_C('EGL_GL_TEXTURE_LEVEL',0x30BC)
EGL_GL_TEXTURE_ZOFFSET=_C('EGL_GL_TEXTURE_ZOFFSET',0x30BD)
EGL_LOSE_CONTEXT_ON_RESET=_C('EGL_LOSE_CONTEXT_ON_RESET',0x31BF)
EGL_NO_RESET_NOTIFICATION=_C('EGL_NO_RESET_NOTIFICATION',0x31BE)
# EGL_NO_SYNC=_C('EGL_NO_SYNC',((EGLSync)0))
EGL_OPENGL_ES3_BIT=_C('EGL_OPENGL_ES3_BIT',0x00000040)
EGL_SIGNALED=_C('EGL_SIGNALED',0x30F2)
EGL_SYNC_CL_EVENT=_C('EGL_SYNC_CL_EVENT',0x30FE)
EGL_SYNC_CL_EVENT_COMPLETE=_C('EGL_SYNC_CL_EVENT_COMPLETE',0x30FF)
EGL_SYNC_CONDITION=_C('EGL_SYNC_CONDITION',0x30F8)
EGL_SYNC_FENCE=_C('EGL_SYNC_FENCE',0x30F9)
EGL_SYNC_FLUSH_COMMANDS_BIT=_C('EGL_SYNC_FLUSH_COMMANDS_BIT',0x0001)
EGL_SYNC_PRIOR_COMMANDS_COMPLETE=_C('EGL_SYNC_PRIOR_COMMANDS_COMPLETE',0x30F0)
EGL_SYNC_STATUS=_C('EGL_SYNC_STATUS',0x30F1)
EGL_SYNC_TYPE=_C('EGL_SYNC_TYPE',0x30F7)
EGL_TIMEOUT_EXPIRED=_C('EGL_TIMEOUT_EXPIRED',0x30F5)
EGL_UNSIGNALED=_C('EGL_UNSIGNALED',0x30F3)
@_f
@_p.types(_cs.EGLint,_cs.EGLDisplay,_cs.EGLSync,_cs.EGLint,_cs.EGLTime)
def eglClientWaitSync(dpy,sync,flags,timeout):pass
@_f
@_p.types(_cs.EGLSurface,_cs.EGLDisplay,_cs.EGLConfig,ctypes.c_void_p,ctypes.POINTER(_cs.EGLAttrib))
def eglCreatePlatformPixmapSurface(dpy,config,native_pixmap,attrib_list):pass
@_f
@_p.types(_cs.EGLSurface,_cs.EGLDisplay,_cs.EGLConfig,ctypes.c_void_p,ctypes.POINTER(_cs.EGLAttrib))
def eglCreatePlatformWindowSurface(dpy,config,native_window,attrib_list):pass
@_f
@_p.types(_cs.EGLSync,_cs.EGLDisplay,_cs.EGLenum,ctypes.POINTER(_cs.EGLAttrib))
def eglCreateSync(dpy,type,attrib_list):pass
@_f
@_p.types(_cs.EGLBoolean,_cs.EGLDisplay,_cs.EGLSync)
def eglDestroySync(dpy,sync):pass
@_f
@_p.types(_cs.EGLDisplay,_cs.EGLenum,ctypes.c_void_p,ctypes.POINTER(_cs.EGLAttrib))
def eglGetPlatformDisplay(platform,native_display,attrib_list):pass
@_f
@_p.types(_cs.EGLBoolean,_cs.EGLDisplay,_cs.EGLSync,_cs.EGLint,ctypes.POINTER(_cs.EGLAttrib))
def eglGetSyncAttrib(dpy,sync,attribute,value):pass
@_f
@_p.types(_cs.EGLBoolean,_cs.EGLDisplay,_cs.EGLSync,_cs.EGLint)
def eglWaitSync(dpy,sync,flags):pass
