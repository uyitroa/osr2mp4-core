'''Autogenerated by xml_generate script, do not edit!'''
from OpenGL import platform as _p, arrays
# Code generation uses this
from OpenGL.raw.GL import _types as _cs
# End users want this...
from OpenGL.raw.GL._types import *
from OpenGL.raw.GL import _errors
from OpenGL.constant import Constant as _C

import ctypes
_EXTENSION_NAME = 'GL_EXT_light_texture'
def _f( function ):
    return _p.createFunction( function,_p.PLATFORM.GL,'GL_EXT_light_texture',error_checker=_errors._error_checker)
GL_ATTENUATION_EXT=_C('GL_ATTENUATION_EXT',0x834D)
GL_FRAGMENT_COLOR_EXT=_C('GL_FRAGMENT_COLOR_EXT',0x834C)
GL_FRAGMENT_DEPTH_EXT=_C('GL_FRAGMENT_DEPTH_EXT',0x8452)
GL_FRAGMENT_MATERIAL_EXT=_C('GL_FRAGMENT_MATERIAL_EXT',0x8349)
GL_FRAGMENT_NORMAL_EXT=_C('GL_FRAGMENT_NORMAL_EXT',0x834A)
GL_SHADOW_ATTENUATION_EXT=_C('GL_SHADOW_ATTENUATION_EXT',0x834E)
GL_TEXTURE_APPLICATION_MODE_EXT=_C('GL_TEXTURE_APPLICATION_MODE_EXT',0x834F)
GL_TEXTURE_LIGHT_EXT=_C('GL_TEXTURE_LIGHT_EXT',0x8350)
GL_TEXTURE_MATERIAL_FACE_EXT=_C('GL_TEXTURE_MATERIAL_FACE_EXT',0x8351)
GL_TEXTURE_MATERIAL_PARAMETER_EXT=_C('GL_TEXTURE_MATERIAL_PARAMETER_EXT',0x8352)
@_f
@_p.types(None,_cs.GLenum)
def glApplyTextureEXT(mode):pass
@_f
@_p.types(None,_cs.GLenum)
def glTextureLightEXT(pname):pass
@_f
@_p.types(None,_cs.GLenum,_cs.GLenum)
def glTextureMaterialEXT(face,mode):pass
