'''Autogenerated by xml_generate script, do not edit!'''
from OpenGL import platform as _p, arrays
# Code generation uses this
from OpenGL.raw.GL import _types as _cs
# End users want this...
from OpenGL.raw.GL._types import *
from OpenGL.raw.GL import _errors
from OpenGL.constant import Constant as _C

import ctypes
_EXTENSION_NAME = 'GL_EXT_vertex_attrib_64bit'
def _f( function ):
    return _p.createFunction( function,_p.PLATFORM.GL,'GL_EXT_vertex_attrib_64bit',error_checker=_errors._error_checker)
GL_DOUBLE=_C('GL_DOUBLE',0x140A)
GL_DOUBLE_MAT2_EXT=_C('GL_DOUBLE_MAT2_EXT',0x8F46)
GL_DOUBLE_MAT2x3_EXT=_C('GL_DOUBLE_MAT2x3_EXT',0x8F49)
GL_DOUBLE_MAT2x4_EXT=_C('GL_DOUBLE_MAT2x4_EXT',0x8F4A)
GL_DOUBLE_MAT3_EXT=_C('GL_DOUBLE_MAT3_EXT',0x8F47)
GL_DOUBLE_MAT3x2_EXT=_C('GL_DOUBLE_MAT3x2_EXT',0x8F4B)
GL_DOUBLE_MAT3x4_EXT=_C('GL_DOUBLE_MAT3x4_EXT',0x8F4C)
GL_DOUBLE_MAT4_EXT=_C('GL_DOUBLE_MAT4_EXT',0x8F48)
GL_DOUBLE_MAT4x2_EXT=_C('GL_DOUBLE_MAT4x2_EXT',0x8F4D)
GL_DOUBLE_MAT4x3_EXT=_C('GL_DOUBLE_MAT4x3_EXT',0x8F4E)
GL_DOUBLE_VEC2_EXT=_C('GL_DOUBLE_VEC2_EXT',0x8FFC)
GL_DOUBLE_VEC3_EXT=_C('GL_DOUBLE_VEC3_EXT',0x8FFD)
GL_DOUBLE_VEC4_EXT=_C('GL_DOUBLE_VEC4_EXT',0x8FFE)
@_f
@_p.types(None,_cs.GLuint,_cs.GLenum,arrays.GLdoubleArray)
def glGetVertexAttribLdvEXT(index,pname,params):pass
@_f
@_p.types(None,_cs.GLuint,_cs.GLdouble)
def glVertexAttribL1dEXT(index,x):pass
@_f
@_p.types(None,_cs.GLuint,arrays.GLdoubleArray)
def glVertexAttribL1dvEXT(index,v):pass
@_f
@_p.types(None,_cs.GLuint,_cs.GLdouble,_cs.GLdouble)
def glVertexAttribL2dEXT(index,x,y):pass
@_f
@_p.types(None,_cs.GLuint,arrays.GLdoubleArray)
def glVertexAttribL2dvEXT(index,v):pass
@_f
@_p.types(None,_cs.GLuint,_cs.GLdouble,_cs.GLdouble,_cs.GLdouble)
def glVertexAttribL3dEXT(index,x,y,z):pass
@_f
@_p.types(None,_cs.GLuint,arrays.GLdoubleArray)
def glVertexAttribL3dvEXT(index,v):pass
@_f
@_p.types(None,_cs.GLuint,_cs.GLdouble,_cs.GLdouble,_cs.GLdouble,_cs.GLdouble)
def glVertexAttribL4dEXT(index,x,y,z,w):pass
@_f
@_p.types(None,_cs.GLuint,arrays.GLdoubleArray)
def glVertexAttribL4dvEXT(index,v):pass
@_f
@_p.types(None,_cs.GLuint,_cs.GLint,_cs.GLenum,_cs.GLsizei,ctypes.c_void_p)
def glVertexAttribLPointerEXT(index,size,type,stride,pointer):pass
