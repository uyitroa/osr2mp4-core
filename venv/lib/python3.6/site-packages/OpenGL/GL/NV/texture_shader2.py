'''OpenGL extension NV.texture_shader2

This module customises the behaviour of the 
OpenGL.raw.GL.NV.texture_shader2 to provide a more 
Python-friendly API

Overview (from the spec)
	
	This extension extends the NV_texture_shader functionality to
	support texture shader operations for 3D textures.
	
	See the NV_texture_shader extension for information about the
	texture shader operational model.
	
	The two new texture shader operations are:
	
	<conventional textures>
	
	22.  TEXTURE_3D - Accesses a 3D texture via (s/q,t/q,r/q).
	
	<dot product textures>
	
	23.  DOT_PRODUCT_TEXTURE_3D_NV - When preceded by two DOT_PRODUCT_NV
	     programs in the previous two texture shader stages, computes a
	     third similar dot product and composes the three dot products
	     into (s,t,r) texture coordinate set to access a 3D non-projective
	     texture.

The official definition of this extension is available here:
http://www.opengl.org/registry/specs/NV/texture_shader2.txt
'''
from OpenGL import platform, constant, arrays
from OpenGL import extensions, wrapper
import ctypes
from OpenGL.raw.GL import _types, _glgets
from OpenGL.raw.GL.NV.texture_shader2 import *
from OpenGL.raw.GL.NV.texture_shader2 import _EXTENSION_NAME

def glInitTextureShader2NV():
    '''Return boolean indicating whether this extension is available'''
    from OpenGL import extensions
    return extensions.hasGLExtension( _EXTENSION_NAME )


### END AUTOGENERATED SECTION